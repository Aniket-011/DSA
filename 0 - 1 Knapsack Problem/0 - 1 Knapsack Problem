vector<vector<int>> dp(n,vector<int>(W+1,-1));
        // return solve(n-1,W,wt,val,dp);
        
        for(int i=0;i<=W;i++){
            if(wt[0] <= i) dp[0][i] = val[0];
            else dp[0][i] = 0;
        }
        
        for(int ind=1;ind<n;ind++){
            for(int w = 0;w<=W;w++){
                int not_take = dp[ind-1][w];
                int take = INT_MIN;
                if(wt[ind] <= w) take = val[ind] + dp[ind-1][w-wt[ind]];
                dp[ind][w] = max(take,not_take);
            }
        }
        return dp[n-1][W];

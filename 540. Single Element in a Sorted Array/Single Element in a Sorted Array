class Solution {
    public int singleNonDuplicate(int[] nums) {
       
         int low =0;
        int high = nums.length-1;
        
        if(high==0) 
            return nums[0];
        
         else if(nums[0]!=nums[1])
            return nums[0];
        
        
         if(nums[high]!=nums[high-1]) 
             return nums[high];
        
        while(low<=high){
            int mid =  (high + low)/2;
            if(nums[mid]!= nums[mid-1] && nums[mid]!=nums[mid+1])
                return nums[mid];
            else if(nums[mid]==nums[mid-1]){
                int lc =  mid - low +1;
                    if(lc%2==0)
                        low = mid + 1;
                else
                    high = mid -2;
            }
            else if(nums[mid]==nums[mid+1]){
                int rc = high - mid +1;
                if(rc%2==0)
                    high = mid -1;
                else 
                    low = mid +2;
            }
        }
        return -1;
    }
}
